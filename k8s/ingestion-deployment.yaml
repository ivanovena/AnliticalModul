apiVersion: apps/v1
kind: Deployment
metadata:
  name: ingestion
  labels:
    app: ingestion
    component: data-collection
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ingestion
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: ingestion
        component: data-collection
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: ingestion
        image: market-model-ingestion:latest
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "400m"
        env:
        - name: FMP_API_KEY
          valueFrom:
            secretKeyRef:
              name: api-credentials
              key: FMP_API_KEY
        - name: FMP_BASE_URL
          value: "https://financialmodelingprep.com/api/v3"
        - name: DB_URI
          value: "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@postgres:5432/$(POSTGRES_DB)"
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: POSTGRES_PASSWORD
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: global-config
              key: POSTGRES_DB
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: global-config
              key: LOG_LEVEL
        ports:
        - containerPort: 8000
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        volumeMounts:
        - name: log-volume
          mountPath: /app/logs
      volumes:
      - name: log-volume
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: ingestion
  labels:
    app: ingestion
    component: data-collection
spec:
  selector:
    app: ingestion
  ports:
  - name: http
    port: 8000
    targetPort: 8000
  type: ClusterIP
